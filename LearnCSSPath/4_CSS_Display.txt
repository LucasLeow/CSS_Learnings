CSS "Display" property
	
Intro:
	- Often, hiding content using display: none property
	- Sometimes, make nav bar horizontal using:
		display: inline-block;

-- 1 Basic Display Values --


-- 1-1 Inline Elements --
	- By default, every html element is display: inline (before browser style apply)
	- browser style overrides many to block values instead
	
	Inline properties (generic element w/o meaning : <span>)
		- styling inline element only apply to width of its content
		- padding overlaps any element on the same line if big enough
		- margin applies only to left and right side, not to top & btm for inline elements
		- only as wide as their given content, 
		- specifying width will not affect size of inline elements
	
	
	
-- 1-2 Block Elements -- (generic element w/o meaning : <div>)
	- The other default value 
	- holds big block of information
		- section | article | aside | header | footer | body
		- paragraphs | headings | tables | lists
		- div
	 
	Block properties
		- styling block element apply to entire content its withholding, stretching to end of page
		- width:300px -> width affects block element, altering height along the process
		- margin affects all sides of block element, dividing equally
			- eg: if margin: 3rem; specified, left & right will be 1.5rem each, top btm 1.5 rem each
		- padding applies to all 4 side, but will not divide equally
		
		
-- 1-3 Proper nesting of block & inline elements --

	LEGAL:
		- Block inside block
		- inline inside block
		- inline inside inline
		
	ILLEGAL:
		- block inside inline (especially when dealing with links)
			eg: placing paragraph inside <a> tag
			

-- 1-4 display:none vs visibility:hidden

	display:none;
		- all content including the space disappears
		(absolute positioning, space disppears too)
	
	visibility:hidden;
		- content hidden but spacing remains
		(relative positioning, space maintained)
		(typically used with Javascript, maintaining the empty space)
		
	
-- 2 Newer Display Values --

-- 2-1 Layouts with inline flex & grid --
	- Inline & block element does not inherit from parent element
	- Flexbox & grid elements:
		- Display declared on parent
		- children receive some interesting properties
		
	display:flex;
		- alters both the parent and child(s) elements
		- Affects both the outer and inner layout
			- outer layout becomes block
				- outer layout is the property applied to parent
			- inner layout becomes inline
				- inner layout is the property passed to children
			
	display: inline-flex;
		- Both outer and inner layout becomes inline
		
		
-- 2-2 Flow-root and floats --
		
		section {
			display: flow-root;
		}
		
		img {
			float: left;
		}
		
		For words to wrap to the right of img
		
		flow-root : To make section background flow to cover the end of img\
			- thus, the img and the background will be aligned
			

-- 2-3 inline-block --
	- to display navigation bar horizontally
	- <nav> then <ul> within nav tags to make navbar is the way to make navigation bars
		
		
	li {
		display: inline-block;
	}
	
	a {
		display: block;
	}
	
	- to allow display of elements as inline
	- but allow to apply margin to all 4 sides
		* Because inline elements only allow margin to left and right
	- inline-block solves the problem, making the elements inline but with block properties
	
	** BY SETTING <a> display to block, it makes the entire link within border clickable
		