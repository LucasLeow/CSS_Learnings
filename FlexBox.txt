To use flexbox layout, indicate "display: flex;" with appropriate selector
	- display:flex; Typically applied to parent element


eg:

		<nav>
			<ul class="nav-list">
				<li>Home</li>
				<li>About</li>
				<li>Contact</li>
			</ul>
		</nav>
		

	.nav-list {
		display: flex;
	}
	
-- What happens when display:flex is called --


	1) The child elements become flex items
	
		- flex items want to occupy the least amount of space
			(width: max-content;)
			
		- flex items become inline
			
		- if exceed parent space, flex-items will wrap until it overflows
		
		
		
		


(Parent is main axis) (flex-direction default is "row") (Therefore, main axis is horizontal by default)
Useful flex-parent property:

	display: flex; // to init flex box layout
	
	gap: 1rem; // provides gap between flex items
	
	flex-wrap: wrap; // flex items allow to wrap, default is nowrap
		- prevents overflow when minimizing window
		                   
	flex-direction: column; // default is row
		- main axis becomes vertical, flex items displayed horizontally
		
		
		
(MAIN-AXIS property) 
	- justify-content: center; (center flex-items inside parent)
		(center | flex-start (default) | flex-end | space-between | space-around | space-evenly)
		- will only work if there is leftover space
		- if screen is small, nothing much will change
		- if flex-direction: column, justify content will adjust content to be centered vertically
			- typically need to specify height to increase height of parent to see change
			- height: 100vh;
		
(CROSS-AXIS property) (affects the flex-items content)
	- align-items: stretch; (default) // stretch to fit end of parent for all items
	- align-items: flex-start (content only stretch to end of content for each flex item)
	- flex-end (opposite of flex start, content at the bottom of parent
	- center : center the flex-items within the parent
		- only work if there is remaining space between flex items and parent
		
	- Can target only specific flex-item
	
	eg:
	
	.card:nth-child(2) {
		background: cyan;
		align-self: flex-start;
	}

	
		
		
		
		
(Flex items are child elements)
(Flex items is cross axis) (cross axis is vertical by default)
Useful flex-items property:

	flex-shrink: 1; // allow flex items to shrink. If 0, wrapping not allowed
		- if 0, dont allow items to shrink, may cause overflow, esp. of the last item
		
	flex-grow: 0; // default is 0, item cannot grow. values specify ratio
		- equally distribute flex items to fill entire content
		
	flex: 1; // allow all flex items to have equal width
		- shorthand for 3 different values
				flex-grow: 1
				flex-shrink: 1
				flex-basis: 0
					flex-basis default is "auto"
					- flex-basis is like setting width of flex-items
					- flex-basis: 300px; // makes all the flex-items have 300px width
					- if set to 0, does not really go to 0
				flex-basis:100%; also makes flex item equal width
					- may cause issue if padding inconsistent b/w different flex items